---
title: "Neural Network"
format: pdf
editor: visual
---

```{r}
#| echo: false
# change working directory accordingly
library(neuralnet)
library(dplyr)
library(nnet)
library(caret)

setwd("D:/School/Data Science/Neural Network")
data <- read.csv("heart.csv", header = TRUE, sep=",")
```

```{r}
#| echo: false
# convert categorical variables to factors
data$Sex <- as.factor(data$Sex)
data$ChestPainType <- as.factor(data$ChestPainType)
data$RestingECG <- as.factor(data$RestingECG)
data$ExerciseAngina <- as.factor(data$ExerciseAngina)
data$ST_Slope <- as.factor(data$ST_Slope)

# formula for network
formula <- as.formula("HeartDisease ~ Age + Sex + ChestPainType + RestingBP + Cholesterol + FastingBS + RestingECG + MaxHR + ExerciseAngina + Oldpeak + ST_Slope")

# split data into training and testing
set.seed(200)
split_ratio <- 0.8
num_samples <- nrow(data)
train_indices <- sample(1:num_samples, split_ratio * num_samples)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]

# convert factor variables back to their original form
categorical_columns <- c("Sex", "ChestPainType", "RestingECG", "ExerciseAngina", "ST_Slope")
train_data[categorical_columns] <- lapply(train_data[categorical_columns], as.factor)
test_data[categorical_columns] <- lapply(test_data[categorical_columns], as.factor)

# convert all variables to numeric (including factors)
train_data[] <- lapply(train_data, as.numeric)
test_data[] <- lapply(test_data, as.numeric)

# train neural network
nn_model <- neuralnet(
  formula,
  data = train_data,
  hidden = c(5),   # number of neurons in hidden layer; manipulate as needed
  linear.output = TRUE,
  threshold = 0.01,   # convergence threshold
  stepmax = 5000000,    # max number of iterations
  learningrate = 0.01, # manipulate as needed
  startweights = NULL,
  lifesign = "minimal"
)

# plot model
plot(nn_model, rep = "best", show.weights = FALSE)

# evaluate the model on the test data and extract relevant column from predictions
test_predictions <- predict(nn_model, newdata = test_data)
test_predictions <- ifelse(test_predictions[, 1] >= 0.5, 1, 0)


# calculate accuracy
accuracy <- sum(test_predictions == test_labels) / length(test_labels)
cat("Test accuracy:", accuracy, "\n")
```
